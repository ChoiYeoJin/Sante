import styled from 'styled-components';
import GageBar from './GageBar';
import { useState, useEffect } from 'react';
import DynamicButton from '../DynamicButton';

const MainStatistic = () => {
  const caloryMoods = {
    notEnough: { emoji: 'ü•∫', message: 'ÎÅºÎãà Í±∞Î•¥Í≥† Í≥ÑÏã†Í±∞ ÏïÑÎãàÏ£†?„Öú„Öú' },
    enough: { emoji: 'üòä', message: 'Ïûò Î®πÍ≥† ÏûàÏñ¥Ïöî!' },
    tooMuch: { emoji: 'üòµ', message: 'Í∏∞Ï§ÄÏπòÎ•º Ï¥àÍ≥ºÌñàÏñ¥Ïöî' },
  };
  const [caloryMood, setCaloryMood] = useState(caloryMoods.notEnough);
  const [gage, setGage] = useState(0);

  // const API_ENDPOINT = 'urlÏ£ºÏÜå';
  useEffect(() => {
    //NOTE Î∞±ÏóîÎìú APIÏóêÏÑú Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
    // axios.get(API_ENDPOINT)
    //   .then((res) => {
    //     const responseData = res.data;
    //     const receivedGageValue = responseData.gage; // Ïã§Ï†ú Îç∞Ïù¥ÌÑ∞ Íµ¨Ï°∞Î°ú ÍµêÏ≤¥
    //     setGage(calculatedGage);
    //   })
    //   .catch((error) => {
    //     console.error('APIÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•ò Î∞úÏÉù:', error);
    //   });
    setGage(calculatedGage);
  }, []);

  //NOTE: Í∏∞Ï§Ä 80%

  const handleCaloryGage = (currentGage: number) => {
    let newCaloryMood = { ...caloryMood };
    if (currentGage === 80) {
      newCaloryMood = caloryMoods.enough;
    } else if (currentGage > 80) {
      newCaloryMood = caloryMoods.tooMuch;
    } else {
      newCaloryMood = caloryMoods.notEnough;
    }
    setCaloryMood(newCaloryMood);
  };

  return (
    <GageContainerDiv>
      <InformationAreaDiv>
        <FlexContainerDiv>
          <TextContainerDiv>Ï£ºÍ∞Ñ Ïö¥Îèô Îã¨ÏÑ±Î•†</TextContainerDiv>
          <br />
          <GageBar gage={50} type="exercise" />
        </FlexContainerDiv>
        <FlexContainerDiv>
          <TextContainerDiv>ÌïòÎ£® ÏÑ≠Ï∑® ÏπºÎ°úÎ¶¨</TextContainerDiv>
          <br />
          <GageBar gage={101} type="food" handleGage={handleCaloryGage} />
          <br />
          <div>
            <EmojiContainerSpan>{caloryMood.emoji}</EmojiContainerSpan>
            <StatusContainerSpan>{caloryMood.message}</StatusContainerSpan>
          </div>
        </FlexContainerDiv>
      </InformationAreaDiv>
      <ButtonAreaDiv>
        <DynamicButton type="outline" size="medium" text="ÌÜµÍ≥Ñ ÏÉÅÏÑ∏Î≥¥Í∏∞" />
      </ButtonAreaDiv>
    </GageContainerDiv>
  );
};
//NOTE: ÎØ∏ÏôÑÏÑ±
const GageContainerDiv = styled.div`
  width: 27.4rem;
  height: 36.7rem;
  border-radius: 2rem;
  background-color: #FFFFF;
  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);
`;
//NOTE: globalstylesÏóê white Ïª¨Îü¨ Ï∂îÍ∞Ä

const InformationAreaDiv = styled.div`
  width: 100%;
  height: 82%;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
`;

const ButtonAreaDiv = styled.div`
  display: flex;
  justify-content: flex-end;
  margin: 2.4rem;
`;

const TextContainerDiv = styled.div`
  font-size: 2rem;
  font-weight: 600;
`;
const FlexContainerDiv = styled.div`
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
`;

const StatusContainerSpan = styled.span`
  font-size: 1.3rem;
  font-weight: 600;
`;

const EmojiContainerSpan = styled.span`
  font-size: 2rem;
  font-weight: 600;
`;
export default MainStatistic;
